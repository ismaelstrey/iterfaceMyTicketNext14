// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String?
  password   String
  phone      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  empresa    Empresa? @relation(fields: [empresaId], references: [id])
  empresaId  Int?

  @@map("users")
}

model Cliente {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String?
  status     Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  empresa    Empresa[]

  @@map("clientes")
}

model Empresa {
  id                    Int          @id @default(autoincrement()) // ID da empresa (autoincrementado)
  nome                  String // Nome da empresa
  cnpj                  String // CNPJ da empresa
  endereco              String // Endereço da empresa
  cidade                String // Cidade da empresa
  estado                String // Estado da empresa
  cep                   String // CEP da empresa
  telefone              String? // Telefone da empresa (opcional)
  email                 String? // Email da empresa (opcional)
  dataFundacao          DateTime? // Data de fundação da empresa (opcional)
  tipoEmpresa           String? // Tipo de empresa (opcional)
  ramoAtividade         String? // Ramo de atividade da empresa (opcional)
  responsavelLegal      String? // Responsável legal da empresa (opcional)
  capitalSocial         Float? // Capital social da empresa (opcional)
  situacaoTributaria    String? // Situação tributária da empresa (opcional)
  informacoesAdicionais String? // Informações adicionais sobre a empresa (opcional)
  user                  User[]
  tecnico               Tecnico[]
  tiket                 Tiket[]
  cliente               Cliente?     @relation(fields: [clienteId], references: [id])
  empresa_tipo          EmpresaTipo? @relation(fields: [empresaTipoId], references: [id])
  empresaTipoId         Int?
  clienteId             Int?
  created_at            DateTime     @default(now())
  updated_at            DateTime?    @updatedAt

  @@map("empresas")
}

model Tecnico {
  id            Int          @id @default(autoincrement())
  email         String       @unique
  type          String?
  name          String?
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  tecnico_tipo  TecnicoTipo? @relation(fields: [tecnicoTipoId], references: [id])
  empresa       Empresa?     @relation(fields: [empresaId], references: [id])
  empresaId     Int?
  tiket         Tiket[]
  tecnicoTipoId Int?

  @@map("tecnicos")
}

model Tiket {
  id                 Int        @id @default(autoincrement())
  title              String
  subTitle           String
  description        String
  problema_informado String?
  observacao         String?
  created_at         DateTime   @default(now())
  updated_at         DateTime   @updatedAt
  status             Status     @default(ABERTO)
  prioridade         Prioridade @default(BAIXA)
  empresa            Empresa?   @relation(fields: [empresaId], references: [id])
  categoria          Categoria? @relation(fields: [categoriaId], references: [id])
  tecnico            Tecnico?   @relation(fields: [tecnicoId], references: [id])
  tecnicoId          Int?
  empresaId          Int?
  categoriaId        Int?

  @@map("tickets")
}

model Categoria {
  id             Int           @id @default(autoincrement())
  name           String
  color          String
  subcategoria   Subcategoria? @relation(fields: [subcategoriaId], references: [id])
  iiket          Tiket[]
  subcategoriaId Int?

  @@map("categorias")
}

model Subcategoria {
  id        Int         @id @default(autoincrement())
  name      String?
  color     String?
  categoria Categoria[]

  @@map("subcategorias")
}

model TecnicoTipo {
  id      Int       @id @default(autoincrement())
  name    String?
  tecnico Tecnico[]

  @@map("tecnico_tipo")
}

model EmpresaTipo {
  id      Int       @id @default(autoincrement())
  name    String?
  empresa Empresa[]

  @@map("empresa_tipo")
}

enum Status {
  ABERTO
  INICIADO
  PAUSADO
  CONCLUIDO
  CANCELADO
}

enum Prioridade {
  ALTA
  MEDIA
  BAIXA
  PLANEJADA
  CRITICA
}
