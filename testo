// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String?
  password   String
  phone      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  empresa    Empresa? @relation(fields: [empresaId], references: [id])
  empresaId  Int?

  @@map("users")
}

model Cliente {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String?
  status     Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  empresa    Empresa[]

  @@map("clientes")
}

model Empresa {
  id            Int          @id @default(autoincrement())
  razao_social  String?
  nome_fantasia String?
  ie            String?
  name          String?
  clientes      String?
  tipo          String
  created_at    DateTime     @default(now())
  updated_at    DateTime?    @updatedAt
  user          User[]
  tecnico       Tecnico[]
  tiket         Tiket[]
  cliente       Cliente?     @relation(fields: [clienteId], references: [id])
  empresa_tipo  EmpresaTipo? @relation(fields: [empresaTipoId], references: [id])
  empresaTipoId Int?
  clienteId     Int?

  @@map("empresas")
}

model Tecnico {
  id            Int          @id @default(autoincrement())
  email         String       @unique
  type          String?
  name          String?
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  tecnico_tipo  TecnicoTipo? @relation(fields: [tecnicoTipoId], references: [id])
  empresa       Empresa?     @relation(fields: [empresaId], references: [id])
  empresaId     Int?
  tiket         Tiket[]
  tecnicoTipoId Int?

  @@map("tecnicos")
}

model Tiket {
  id                 Int          @id @default(autoincrement())
  problema_informado String?
  observacao         String?
  created_at         DateTime     @default(now())
  updated_at         DateTime     @updatedAt
  status             TiketStatus? @relation(fields: [tiketStatusId], references: [id])
  empresa            Empresa?     @relation(fields: [empresaId], references: [id])
  categoria          Categoria?   @relation(fields: [categoriaId], references: [id])
  tecnico            Tecnico?     @relation(fields: [tecnicoId], references: [id])
  prioridade         Prioridade?  @relation(fields: [prioridadeId], references: [id])
  prioridadeId       Int?
  tecnicoId          Int?
  tiketStatusId      Int?
  empresaId          Int?
  categoriaId        Int?

  @@map("tickets")
}

model Categoria {
  id             Int           @id @default(autoincrement())
  name           String
  color          String
  subcategoria   Subcategoria? @relation(fields: [subcategoriaId], references: [id])
  iiket          Tiket[]
  subcategoriaId Int?

  @@map("categorias")
}

model Subcategoria {
  id        Int         @id @default(autoincrement())
  name      String?
  color     String?
  categoria Categoria[]

  @@map("subcategorias")
}

model Prioridade {
  id    Int     @id @default(autoincrement())
  name  String?
  color String?
  icon  String?
  tiket Tiket[]

  @@map("prioridades")
}

model TiketStatus {
  id         Int      @id @default(autoincrement())
  name       String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Tiket      Tiket[]

  @@map("tiket_status")
}

model TecnicoTipo {
  id      Int       @id @default(autoincrement())
  name    String?
  tecnico Tecnico[]

  @@map("tecnico_tipo")
}

model EmpresaTipo {
  id      Int       @id @default(autoincrement())
  name    String?
  empresa Empresa[]

  @@map("empresa_tipo")
}
